{{ template "python_file_header" . }}
from __future__ import absolute_import, division, print_function

__metaclass__ = type

################################################################################
# Documentation
################################################################################

ANSIBLE_METADATA = {
    "metadata_version": "1.1",
    "status": ["preview"],
    "supported_by": "community"
}

DOCUMENTATION = r"""
---
{{ $.Documentation.ToString }}"""

EXAMPLES = r"""
{{ $.Examples.ToString }}"""

RETURN = r"""
{{ $.Returns.ToString }}"""

################################################################################
# Imports
################################################################################

import ansible_collections.google.cloud.plugins.module_utils.gcp_utils as gcp
import json
{{ if $.CustomCode.CustomImport | trimSpace | len | gt 0 -}}
# BEGIN Custom imports
{{ $.CustomCode.CustomImport | trimSpace }}
# END Custom imports
{{- end }}

def self_link(module):
    params = module.params
{{- range $.UrlParamOnlyProperties }}
{{- if streq .Type "ResourceRef" }}
    params["{{ .Name | underscore -}}"] = gcp.replace_resource_dict(module.params["{{ .Name | underscore -}}"], "{{ .Imports }}")
{{- end }}
{{- end }}

    return "{{ $.SelfLinkTpl }}".format(**params)

################################################################################
# Main
################################################################################


def main():
    """Main function"""

    module = GcpModule(
        {{ $.ArgumentSpec.ToString | indent 8 false }}
    )

    changed = False

    module.exit_json(
        changed=changed,
        state=module.params["state"],
        **module.params
    )


if __name__ == "__main__":
    main()
